spending vesting

struct Datum{
    creator: PubKeyHash
    beneficiary: PubKeyHash
    deadline: Time
}

enum Redeemer{
    Cancel
    Claim
}

func main(datum : Datum, redeemer: Redeemer, context: ScriptContext) -> Bool {
    tx: Tx = context.tx;
    now: Time = Tx.time_ranage.start;

    redeemer.switch {
        Cancel=> {
            //Check if deadline has not passed
            (now < datum.deadline).trace("VS1: ") &&

            //Check that the transaction is signed by owner
            tx.is_signed_by(datum.creator).trace("VS2: ")
        },
        Claim =>{
            //Check if deadline has passed
            (now > datum.deadline).trace("VS3: ") &&

            //Check that the transaction is signed by beneficiary
            tx.is_signed_by(datum.beneficiary).trace("VS4: ")
        }

    }

}